{
    "contents" : "#  ----------------------------------------------------------------------------\n#  PRECIOUS METALS PRICE FORECAST\n#  File: helpers.R\n#  Enrique PÃ©rez Herrero\n#  11/Dec/2015\n#  ----------------------------------------------------------------------------\n\nlibrary(shiny)\nlibrary(shinythemes)\nlibrary(quantmod)\nlibrary(ggplot2)\nlibrary(forecast)\n\n\ngetPreciousMetals <- function(metals, currencies) {\n    metal_data <- list()\n    for (metal in metals) {\n        for (currency in currencies) {\n            num <- paste(metal, currency, sep = '.')\n            print(num)\n            metal_data[[num]] <- as.data.frame(\n                getMetals(\n                    metal,\n                    from = Sys.Date() - (5 * 365 - 13),\n                    to = Sys.Date(),\n                    base.currency = currency,\n                    auto.assign = FALSE\n                )\n            )\n        }\n    }\n    # Convert metal_data to df and improve formatting.\n    metal_data <- as.data.frame(metal_data)\n    metal_data <-\n        cbind(date = as.Date(rownames(metal_data)), metal_data)\n    rownames(metal_data) <- c(1:nrow(metal_data))\n    return(metal_data)\n}\n\n\nprecious_metals <- c(\n    'Gold' = 'XAU',\n    'Silver' = 'XAG',\n    'Palladium' = 'XPD',\n    'Platinum' = 'XPT'\n)\n\ncurrency_list <- c('US Dollar' = 'USD',\n                   'Euro' = 'EUR',\n                   'Pound Sterling' = 'GBP')\n\n\nsmooth_method <- c('loess', 'lm')\n\n\narimaForecastPlot <- function(forecast, start, ylabel, ...) {\n    # data wrangling\n    time <- attr(forecast$x, 'tsp')\n    time <-\n        seq(time[1], attr(forecast$mean, 'tsp')[2], by = 1 / time[3])\n    lenx <- length(forecast$x)\n    lenmn <- length(forecast$mean)\n    time2 <-\n        seq(from = start, to = start + lenx + lenmn , by = \"1 day\")\n    \n    df <- data.frame(\n        time = as.Date(time + start),\n        x = c(forecast$x, forecast$mean),\n        forecast = c(rep(NA, lenx), forecast$mean),\n        low1 = c(rep(NA, lenx), forecast$lower[, 1]),\n        upp1 = c(rep(NA, lenx), forecast$upper[, 1]),\n        low2 = c(rep(NA, lenx), forecast$lower[, 2]),\n        upp2 = c(rep(NA, lenx), forecast$upper[, 2])\n    )\n    \n    \n    p <- ggplot(df, aes(time, x), ...) +\n        geom_ribbon(aes(ymin = low2, ymax = upp2), fill = 'yellow') +\n        geom_ribbon(aes(ymin = low1, ymax = upp1), fill = 'orange') +\n        geom_line() +\n        geom_line(\n            data = df[!is.na(df$forecast),],\n            aes(time, forecast),\n            color = 'blue',\n            na.rm = TRUE\n        ) +\n        ggtitle(paste('Forecasts from', forecast$method)) +\n        xlab('') +\n        ylab(ylabel)\n    return(p)\n}\n",
    "created" : 1449911581140.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "663559786",
    "id" : "1727097D",
    "lastKnownWriteTime" : 1449938093,
    "path" : "C:/CODE/mycode/02-PROJECT1500/01-Coursera/09-Developing Data Products/Project/Precious-Metals-Prediction/helpers.R",
    "project_path" : "helpers.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}